{
	"info": {
		"_postman_id": "45f708c6-753f-448a-9ed4-df11183e0d0d",
		"name": "Course",
		"description": "**Purpose**: APIs for managing courses, including linking courses to teachers.\n\n**Endpoints Included**:\n\n- Create a course, fetch all courses, retrieve course by course ID, and delete course.\n    \n\n**Environment Variables**:\n\n- {{CourseEndpoint}}, {{TeacherID}}, {{CourseID}}.\n    \n\n**Additional Notes**:\n\n- Validate teacher association during course creation and updates.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28757998"
	},
	"item": [
		{
			"name": "Create Course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"let jsonData = pm.response.json();",
							"pm.globals.set(\"CourseID\", jsonData.id);",
							"",
							"pm.test(\"Response contains newly created course details\", () => {",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"description\");",
							"    pm.expect(jsonData).to.have.property(\"teacherId\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Java Zero to Hero\",\n    \"description\": \"The best Java course you have ever needed\",\n    \"teacherId\": \"{{TeacherID}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}{{CourseEndpoint}}",
					"host": [
						"{{BaseURL}}{{CourseEndpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let jsonData = pm.response.json();",
							"",
							"pm.test(\"Response contains an array of all courses\", () => {",
							"    if(jsonData.length > 0) {",
							"        pm.expect(jsonData[0]).to.have.property(\"id\");",
							"        pm.expect(jsonData[0]).to.have.property(\"name\");",
							"        pm.expect(jsonData[0]).to.have.property(\"description\");",
							"        pm.expect(jsonData[0]).to.have.property(\"teacherId\");",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}{{CourseEndpoint}}",
					"host": [
						"{{BaseURL}}{{CourseEndpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let jsonData = pm.response.json();",
							"",
							"pm.test(\"Response contains course details\", () => {",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"description\");",
							"    pm.expect(jsonData).to.have.property(\"teacherId\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}{{CourseEndpoint}}/{{CourseID}}",
					"host": [
						"{{BaseURL}}{{CourseEndpoint}}"
					],
					"path": [
						"{{CourseID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let jsonData = pm.response.json();",
							"",
							"pm.test(\"Response contains updated course details\", () => {",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"description\");",
							"    pm.expect(jsonData).to.have.property(\"teacherId\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Python Zero to Hero\",\n    \"description\": \"The best Python course that you have ever needed\",\n    \"teacherId\": \"{{TeacherID}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}{{CourseEndpoint}}/{{CourseID}}",
					"host": [
						"{{BaseURL}}{{CourseEndpoint}}"
					],
					"path": [
						"{{CourseID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", () => {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}{{CourseEndpoint}}/{{CourseID}}",
					"host": [
						"{{BaseURL}}{{CourseEndpoint}}"
					],
					"path": [
						"{{CourseID}}"
					]
				}
			},
			"response": []
		}
	]
}